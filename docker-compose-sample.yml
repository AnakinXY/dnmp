version: "3"
services:
  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: ${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: nginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default

  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: php
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:rw
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php:rw
      - ${DATA_DIR}/composer:/tmp/composer
    ports:
      - "${XDEBUG_HOST_PORT}:${XDEBUG_HOST_PORT}"
      - "${SWOOLE_HOST_PORT}:${SWOOLE_HOST_PORT}"
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default

  # supervisor:
  #   build:
  #     context: ./services/supervisor
  #     args:
  #       ALPINE_VERSION: alpine:${ALPINE_VERSION}
  #       TZ: "$TZ"
  #   container_name: supervisor
  #   ports:
  #     - "${SUPERVISOR_HOST_PORT_C}:9001"
  #   volumes:
  #     - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
  #     - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
  #     - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       supervisord -n -c /etc/supervisor/supervisord.conf
  #   restart: always
  #   cap_add:
  #     - SYS_PTRACE
  #   networks:
  #     - default


  mysql:
    image: mysql:${MYSQL_VERSION}
    container_name: mysql
    ports:
      - "${MYSQL_HOST_PORT}:3306"
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_DATA_DIR}:/var/lib/mysql/:rw
    restart: always
    networks:
      - default
    command: --lower_case_table_names=1 
    environment:
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      TZ: "$TZ"
      
  portainer:
    image: portainer/portainer:latest
    container_name: portainer
    ports:
      - "${PORTAINER_HOST_PORT}:9000"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:cached
      - ${PORTAINER_DATA_DIR}:/data:cached
    networks:
      - default 


networks:
  default:
